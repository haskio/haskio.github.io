<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[随缘小站]]></title>
  <subtitle><![CDATA[非想非非想]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="haskio.github.io/"/>
  <updated>2015-05-22T10:48:31.652Z</updated>
  <id>haskio.github.io/</id>
  
  <author>
    <name><![CDATA[askio]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[把系统迁移到了hexo上]]></title>
    <link href="haskio.github.io/2015/05/22/2015-05-22-hexo%E7%89%88/"/>
    <id>haskio.github.io/2015/05/22/2015-05-22-hexo版/</id>
    <published>2015-05-22T09:48:00.000Z</published>
    <updated>2015-05-22T10:48:31.652Z</updated>
    <content type="html"><![CDATA[<p>把博客迁移到了hexo系统上，发现了各种小细节的问题。<br>但是速度是比较快。感觉还是不错的。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>把博客迁移到了hexo系统上，发现了各种小细节的问题。<br>但是速度是比较快。感觉还是不错的。</p>
]]>
    </summary>
    
      <category term="hexo" scheme="haskio.github.io/tags/hexo/"/>
    
      <category term="博客" scheme="haskio.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《高手寂寞2 》读后感]]></title>
    <link href="haskio.github.io/2014/12/04/2014-12-4-%E9%AB%98%E6%89%8B%E5%AF%82%E5%AF%9E/"/>
    <id>haskio.github.io/2014/12/04/2014-12-4-高手寂寞/</id>
    <published>2014-12-03T16:00:00.000Z</published>
    <updated>2015-05-24T02:41:17.992Z</updated>
    <content type="html"><![CDATA[<p>终于看完了高2，对于重写的部分，除了多了很多新人物，最终目的的没有变化之外，其实并没有增加新内幕。</p>
<p>所以对于剧情来说，并没有体现出来插一段所带来的好处。</p>
<p>不过故事还是很好看的。依韵大魔王变得更加强大，活脱脱王八蛋的牛x表现（不知道这个称呼的请查看饮），而小剑在没有了优势之后，只能爱欺负。</p>
<p>紫衫到最后也不遵守要让第三者消失之类的誓言了。<br><a id="more"></a><br>而故事到了最后，依韵所说的引导主脑，也只有在经过验证之后在会变成真正的引导着，而这也没在神话部中。</p>
<p>书中一贯的核心是，强者不因为时代强而强，而是本来就是这样，时代不过是给予了机会，即使没有这一刻，下一刻依旧灿烂。而弱者也是因为内心的弱而弱。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>终于看完了高2，对于重写的部分，除了多了很多新人物，最终目的的没有变化之外，其实并没有增加新内幕。</p>
<p>所以对于剧情来说，并没有体现出来插一段所带来的好处。</p>
<p>不过故事还是很好看的。依韵大魔王变得更加强大，活脱脱王八蛋的牛x表现（不知道这个称呼的请查看饮），而小剑在没有了优势之后，只能爱欺负。</p>
<p>紫衫到最后也不遵守要让第三者消失之类的誓言了。<br>]]>
    
    </summary>
    
      <category term="依韵" scheme="haskio.github.io/tags/%E4%BE%9D%E9%9F%B5/"/>
    
      <category term="高手寂寞2" scheme="haskio.github.io/tags/%E9%AB%98%E6%89%8B%E5%AF%82%E5%AF%9E2/"/>
    
      <category term="读书" scheme="haskio.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[愤怒的国学人士]]></title>
    <link href="haskio.github.io/2014/10/30/%E6%84%A4%E6%80%92%E7%9A%84%E5%9B%BD%E5%AD%A6%E4%BA%BA%E5%A3%AB/"/>
    <id>haskio.github.io/2014/10/30/愤怒的国学人士/</id>
    <published>2014-10-29T16:20:00.000Z</published>
    <updated>2015-05-24T02:39:36.189Z</updated>
    <content type="html"><![CDATA[<p>qq群一直是平时聊天的主力场地，所以对于qq群的管理是属于爱搭不理。看见广告了就随手踢。要是没被看见，也就不管了。</p>
<p>群里一直有一个叫玄悟，名字起的相当带有色彩，不过却是发广告的，虽然号称是国学人士，不过也就是玩点核桃、雕刻什么的来买。平时我在线的时间也少，所以就没有专门开列表去踢人。</p>
<p>然后事情发展到了前几天，这位国学人士开始大势卖东西，当然也还是核桃，从几百到几千一对的。这时候群里很多人都很反感，有人说你这一对核桃就比我一月挣得的还多。其实物品贵贱不好说，但是在这环境下就不好继续讨论这个了。</p>
<p>郭美美一宿还多少钱呢，不但没损失什么，自己还享受了。<br><a id="more"></a><br>于是我就@了这位玄悟，告知谢绝广告，再发直接踢之。这位仁兄说好，然后下一条消息就又发了一对核桃。</p>
<p>我就没明白，难道学了国学，说话就都可以这样，之前答应的好好的，转手就给哥卖了。这是多么的理解我想踢人的心情，于是顺手就给踢了，并且设置拒绝再加。<img src="http://blog.fea-shine.com/usr/uploads/2014/10/2031934715.jpg" alt="1.jpg"></p>
<p>然后我继续干我该干的，结果另外一位管理员说这人还不断在的在加啊，然后他给拒绝了。我还纳闷，不是给设置拒绝再加么，怎么还有消息。后来发现，这个功能是qq的本地功能，换了客户端就会提醒，或者直接在消息记录里就能看见。</p>
<p>不过当时没研究这个，我说拒了就行。人家还说，这些搞国学的，我拒绝了不会骂我吧。 当时我还说虽然是学国学的，但是素质未必就会差，未必会挨骂。</p>
<p>结果这话说早了，之后这位玄悟，名字里又神秘又开悟的人士不断的在加，然后后来终于开始开骂了。</p>
<p><img src="http://blog.fea-shine.com/usr/uploads/2014/10/3673008350.jpg" alt="2.jpg"></p>
<p>让人见识到了国学人士的风采，果然是念念不忘，持之以恒，坚持不懈。真实在不是一般人物，希望对大家日常接触这类人也有一些帮助和借鉴。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>qq群一直是平时聊天的主力场地，所以对于qq群的管理是属于爱搭不理。看见广告了就随手踢。要是没被看见，也就不管了。</p>
<p>群里一直有一个叫玄悟，名字起的相当带有色彩，不过却是发广告的，虽然号称是国学人士，不过也就是玩点核桃、雕刻什么的来买。平时我在线的时间也少，所以就没有专门开列表去踢人。</p>
<p>然后事情发展到了前几天，这位国学人士开始大势卖东西，当然也还是核桃，从几百到几千一对的。这时候群里很多人都很反感，有人说你这一对核桃就比我一月挣得的还多。其实物品贵贱不好说，但是在这环境下就不好继续讨论这个了。</p>
<p>郭美美一宿还多少钱呢，不但没损失什么，自己还享受了。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[GTD的之前之后1]]></title>
    <link href="haskio.github.io/2014/10/27/GTD%E7%9A%84%E4%B9%8B%E5%89%8D%E4%B9%8B%E5%90%8E1/"/>
    <id>haskio.github.io/2014/10/27/GTD的之前之后1/</id>
    <published>2014-10-27T09:23:15.000Z</published>
    <updated>2015-05-24T02:41:05.436Z</updated>
    <content type="html"><![CDATA[<p>GTD的之前之后</p>
<p>很久没有用过GTD了，原因很多。</p>
<p>首先一个是懒了，之前的使用环境就是pc，最多加一个智能机，多普达，当然是wm，因此从pc到手机，虽然没有现在的这些各种同步、云啊之类的服务和使用模式，</p>
<p>虽然每天都在用数据线的本方法同步，但是用的非常嗨皮。而现在用的设备多了，平台也多了。有多平台方案的，功能不行。功能可以的，没有多平台方案，总是没有合适的工具。</p>
<p>然后另外一个就是事务的类型，之前的工作事务，虽然很杂乱，但是也比较好归类，按照事情进行处理就可以了。而现在的事情，很多都需要前置后置条件，各种相关因素，以及多方面的考虑，一股脑的往里面扔，明显是非常的不靠谱。但是分类的话，又没有合适的纬度。<br><a id="more"></a><br>总之来说，虽然当初养成了用GTD的习惯，但是若干年之后，又因为各种各样的理由弃用了。</p>
<p>但是GTD的好处是毋庸置疑的，在不用了这么长时间，也慢慢感觉到了各种各样的不适应，总的来说有以下几点：</p>
<p>1、忘</p>
<p>头等的问题就是把事情忘了。（这样的话，其实需要一个记事本？）</p>
<p>2、时间冲突</p>
<p>虽然时间没忘，但是也没清晰的概念，等到去做别的事情，发现时间冲突了（日程安排和提醒）。</p>
<p>3、追溯</p>
<p>也就是来龙去脉。一时的记忆可能不会出什么问题，但是时间长了，可能某些细节就忘了。当时是如何考虑的，做了什么，时常就无法追溯了（归档）</p>
<p>4、时刻想</p>
<p>用gtd最好的一点，就是把各种问题都从脑袋里扔出去，在解决的时候才需要考虑。当习惯这种模式的时候，空闲时间就不会还在考虑各种问题。当然这是主观不考虑，客观有没有那得看潜意识的。否则就是一直脑子里n多事情。当然你习惯了放空，但是又没有一个启动工作的开始时间，也是很麻烦的。</p>
<p>5、规划</p>
<p>这个跟gtd没啥关系，纯粹是个人工作习惯问题。混乱了也没则。</p>
<p>没写完，再续。。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>GTD的之前之后</p>
<p>很久没有用过GTD了，原因很多。</p>
<p>首先一个是懒了，之前的使用环境就是pc，最多加一个智能机，多普达，当然是wm，因此从pc到手机，虽然没有现在的这些各种同步、云啊之类的服务和使用模式，</p>
<p>虽然每天都在用数据线的本方法同步，但是用的非常嗨皮。而现在用的设备多了，平台也多了。有多平台方案的，功能不行。功能可以的，没有多平台方案，总是没有合适的工具。</p>
<p>然后另外一个就是事务的类型，之前的工作事务，虽然很杂乱，但是也比较好归类，按照事情进行处理就可以了。而现在的事情，很多都需要前置后置条件，各种相关因素，以及多方面的考虑，一股脑的往里面扔，明显是非常的不靠谱。但是分类的话，又没有合适的纬度。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[看得多，写的少]]></title>
    <link href="haskio.github.io/2014/10/25/%E7%9C%8B%E5%BE%97%E5%A4%9A%EF%BC%8C%E5%86%99%E7%9A%84%E5%B0%91/"/>
    <id>haskio.github.io/2014/10/25/看得多，写的少/</id>
    <published>2014-10-25T15:26:09.000Z</published>
    <updated>2015-05-21T07:18:46.042Z</updated>
    <content type="html"><![CDATA[<p>看的多，写的少。</p>
<p>最近一直在瞎胡闹。</p>
<p>虽然有很多想写的，但是每次都懒到只动动脑。</p>
<p>不能再这样了，还是做点什么吧。先从每日吐槽开始吧。</p>
<p>先记到这里。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>看的多，写的少。</p>
<p>最近一直在瞎胡闹。</p>
<p>虽然有很多想写的，但是每次都懒到只动动脑。</p>
<p>不能再这样了，还是做点什么吧。先从每日吐槽开始吧。</p>
<p>先记到这里。</p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[安装tsar 和nginx]]></title>
    <link href="haskio.github.io/2014/05/09/%E5%AE%89%E8%A3%85tsar-%E5%92%8Cnginx/"/>
    <id>haskio.github.io/2014/05/09/安装tsar-和nginx/</id>
    <published>2014-05-09T15:10:00.000Z</published>
    <updated>2015-05-24T02:40:11.446Z</updated>
    <content type="html"><![CDATA[<p>安装了tsar，并且和nginx 模块</p>
<p>注意安装过之后，如果需要安装nginx 模块，需要安装 tsardevel ，安装是在tsar模块下</p>
<a id="more"></a>
<p>运行</p>
<pre><code>    <span class="keyword">make</span> tsardevel 

`&lt;/<span class="keyword">pre</span>&gt;

然后

&lt;<span class="keyword">pre</span>&gt;`    <span class="keyword">make</span> install
</code></pre><p>即可，之后就可以按照文档中的流程安装。</p>
<p>参考教程：</p>
<p><a href="http://www.361way.com/tsar-nginx/2308.html" target="_blank" rel="external">http://www.361way.com/tsar-nginx/2308.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>安装了tsar，并且和nginx 模块</p>
<p>注意安装过之后，如果需要安装nginx 模块，需要安装 tsardevel ，安装是在tsar模块下</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[中国学校]]></title>
    <link href="haskio.github.io/2014/05/09/%E4%B8%AD%E5%9B%BD%E5%AD%A6%E6%A0%A1/"/>
    <id>haskio.github.io/2014/05/09/中国学校/</id>
    <published>2014-05-09T10:56:00.000Z</published>
    <updated>2015-05-24T02:36:55.484Z</updated>
    <content type="html"><![CDATA[<p>来自：<a href="http://412026208.diandian.com/post/2011-01-02/4675523" target="_blank" rel="external">独领</a></p>
<p>来自BBC的纪录片，讲中国中小学生的成长故事。07年的春天摄制组来到中国安徽一个名不见经传的小县城——休宁，他们选中了三所学校，省重点的休宁高中，非重点的海洋中学，以及县城郊区的慈善小学：平民小学，对其中数位学生进行近一年的跟踪报道，欲偏盖整个中国的学校。</p>
<p>休宁人有两样值得骄傲的东西：tea and teach。在中国目前的教育系统下值得骄傲的只有升学率，休中的升学率当然是不错的，它向各大著名高校输入了无数的人才，而今年的top student吴雨霏（奇怪，这三个字只需输入拼音搜狗就自动弹出了）是近十年来休中最优秀的学生。由后面的内容我们知道，吴雨霏考了安徽省状元，进了清华，创造了历史，摄制组未卜先知，选人也太绝了。班主任贺老师教英语，面对镜头他总是用流利的英语说话，他说：吴雨霏不仅是学校的优秀学生，还是全省的甚至全国的优秀学生，“in my heart ,the beast.”。贺老师消瘦、憔悴，充满激情，尽职尽责，他是所有优秀高中老师的代表。</p>
<p>纪录片对高三艰苦生活的展现还是比较到位的。早上5点45起床，学习到晚上10点40，老师还会到教室去赶走那些试图继续留在教室学习的学生，更加刻苦的如吴雨霏在学校外面租有一间房子，以便下了晚自习还可以继续学习。这些都是我们曾经经历的，许多没租房子的学生会偷偷在寝室点灯看书，或者跑到走廊有灯的地方去。<br><a id="more"></a><br>另一所中学海洋中学，虽不是省重点，但它培养的初中生还是很不错的，它是休中的后备军的主要地。许多县城只有一所重点，其它中学高中都不怎么好，只有培养优秀初中毕业生，送了重点去，为他人做了嫁衣裳。刘翔是海洋中学初三最优秀的学生，摄制组选中了他，他很努力，吃饭时的时间也不会放过，他会把书放在旁边。刘翔如吴雨霏一样都是独生子，家里把希望都寄托在他的身上，扫墓时也不忘叫祖宗保佑刘翔考上好大学，这跟我们那儿很相似，高考前不仅要给祖坟上香放鞭炮，还会到著名的庙宇去求神保佑。刘翔的奶奶就很信神，家里还供奉着观世音，刘翔虽不信这些，但会装着信的样子去点一支香，好让他奶奶欣慰些。刘翔倒也不负众望，最终在六月的中考取得了好成绩，进入休中的top class。</p>
<p>海洋中学的学生并不是都如刘翔般有好成绩。査毓佳也是摄制组的人选，她成绩不是太好，但她开朗、豪放，普通话好，是学校广播站的播音员，他喜欢看 哈利波特，喜欢杀价，喜欢足球，在镜头前，她总是快语如珠。她梦想当一名CCTV体育节目的主持人，她父母承担了她北上北京进行播音培训的昂贵费用，也总算学满归来。</p>
<p>査毓佳在海洋中学有个好朋友叫宁舍建，他人小却自理能力强，因为他一出生就被父母抛弃，是福利院收养了他，幸好有好心人把他当儿子一样，他好像对自己的身世乐观，总是为自己得到许多人资助而感到幸福。査毓佳去北京没有对他说，在那段时间里，他很想念他的朋友，当査毓佳从北京回来重新出现在学校时，他很激动，拉住査毓佳说个不停，此时的镜头把这个过程全录了下来，好友重逢，是那么的温馨。</p>
<p>査毓佳学播音主持算了艺术生，中国学校里还有另一种学生，那就是体育生。吴凯是海洋中学优秀的体育生，在王老师的带领下，他的体育已经颇有成绩，他坚信自己能上本科，他不想被他老师当猪一样“卖掉”。体育考试那一天，天气炎热，吴凯好几项都发挥失常，最后一项长跑中终于拿下第三名的好成绩。专业成绩算是过了，但文化考试对他来说是更大的挑战。</p>
<p>第三所学校是小学，平民小学，是由慈善捐助的，为贫困家庭的学生提供免费的教育和生活保障。平民中学不仅提供了高质量的小学教育，还会教育学生学会独立生活的能力，课余时间他们还种地，去春游并且野炊。这让我想起了自己的小学，我们也会时而去种学校周边的地，只是那些是老师的地，成果全归老师；我们也春游，一大队人，前面的扛着旗杆，只是我们很少有人野炊，大部分的同学都是趁机向家长要钱买零食。现在的小学生命贵了，老师承担不了安全责任，所以春游也就基本不存在了。</p>
<p>平民小学的小朋友平时都住在学校，周末由家长接回家。这天甘萍小朋友在等她的爷爷来接她回去，她是校长蒋老师眼中最优秀的学生，学习好、听话，几年前她父母离异，之后爸爸去了南方打工，妈妈在不久后的一场车祸中丧生，小甘萍就跟着爷爷奶奶过，来到学校后一切都是免费的，这对她家无疑是很大的帮助。可是这天她的爷爷的久久不曾出现，眼看着别的小朋友都跟着家长走了，学校里空荡荡就剩自己一个，忍不住哭了出来。蒋老师们安慰她说爷爷就来了，却怎么也消除不了她心里的委屈。正哭的厉害时爷爷突然出现在了学校，小甘萍立即放下揉眼的双手，小鸟一样向爷爷飞奔而去，镜头也跟着甘萍的背影，背景音乐响起，让人跟着小甘萍激动、幸福。</p>
<p>新学生开学，许多家庭困难的小朋友进了平民中学。老师点一个学生的名字，家长就离开，许多小朋友眼看着亲人离开，留下孤零零的自己，嚎啕大哭起来，又是鼻涕又是泪。其中一位小朋友却不哭，她是陈刘慧美，她没有妈妈，跟爸爸和奶奶住在偏远的山区，爸爸的一条腿是残废的，行动极不方便，陈刘慧美小朋友在家做许多家务，到学校来了，很快适应了平民小学的生活，她上课认真，不开小差，不顽皮。</p>
<p>纪录片的第四集讲的是奥运热，三所学校都举行了运动会。其实就算没有北京奥运的举办，中国的大部分中小学都会在秋季举行田径运动会。平民小学的赛场了产生了英雄般的人物，他就是戴德利（奇怪，又是一打即出），小小年纪的他囊括了多项比赛的冠军，同学们都很羡慕他，可就在班级的拔河比赛里他所在的班输掉了，他感觉到了巨大的失败，竟然哭了出来。海洋中学同样举行了大型的开幕仪式，许磊是短跑高手，他准备拿下100米的冠军，可是比赛前一天他的肌肉扭伤了，他坚持比赛，输掉比赛不说，在到达终点后双腿疼痛的无法站立。他已经伤的走路都不方便，可依然坚持走上跑道，他要走完全程，这样他的班就可以多加几分。宁舍建只有14岁，他要和高年级同学一起参加3000米的长跑，査毓佳很激动，在赛道旁为他加油，宁舍建远远落后了其他选手，可他坚持跑完了全程。不求名次，只为完整的参赛。这是我初中时运动会的真实写照，同学们都很兴奋，因为运动会的三天不上课，因为可以一起为一个集体加油，许多同学拿不到名次，甚至跑不完全程就退了下来，但运动会的精神已经体现了。古希腊的奥林匹克运动会精神也一个中学里得到了发挥，那是真正的、单纯的奋斗精神！</p>
<p>纪录片里描写了很多的学生。有偷偷交谈恋爱的王林棋，吴林，尽管有家长老师的干预，那些不安感情还是发生了。留守儿童王建文在一次意外事故中手臂骨折，这种情况下他的爸爸才从外地赶回来，医好了，爸爸终究还是要走，他望着父亲远去的背影，写了一篇真挚的作文。我想到我小时候患阑尾，父亲也是慌忙从祖国的另一边赶回来，没过多久就离开了。和刘翔一起进入top class的还有吴珂，她很特别，不像其他同学那样拼命学习，他喜欢跳舞，每周六的晚上她都会去练舞，劲爆热辣的现代舞让她满身是汗。喜欢跳舞的女生通常都有好身材，有好身材的女生通常都不难看。吴珂喜欢明星，也梦想当一名歌手，那样很光鲜，来钱也很容易，她是典型的时尚型女生。在那样的重点高中，更多的学生是如刘翔、李宜颖学习不要，命型。</p>
<p>片子的最后是在除夕夜的鞭炮声中结束的。那年的春节，中国的大部分地区都下起来了雪，snow,sonw,and snow,査毓佳本以为这是一个浪漫的季节，没想到演化成了雪灾，她的母亲也不能回家过年，留在了杭州；宁舍建住在他的姨娘家，买了新衣服，除夕夜里他开心的完全不像个孤儿；刘翔和家人办完了年货，杀了过年猪，一家人团聚在一起举杯庆贺；top student吴雨霏也从北京赶回来，吃完年夜饭，一大家人看起了春晚；还有没有拍摄的小甘萍、陈刘慧美、王建文、成超、吴珂、吴凯……无论有再多的烦恼和忧愁，在除夕烟花点缀的夜空下，都暂时忘记了，希望所有的中国人都能有那样的一夜，今年的春节，在看了这些故事后我更充满了期待。</p>
<p>一共五集纪录片，道尽了中国学校里的学生的方方面面，虽然不是十分的全面，也不是十分的准确，但它确实是朴素的讲完了中国学校的故事。不知道外国的观众看完后有什么感受，我这种当事人看了，莫名的感触直逼而来，我从中知道了原来我们平淡的生活里是有故事的，而且是精彩的。无论中国的教育是好是坏，作为青年，都应该演绎好自己的故事。片子拍完已经三年了，但这样的故事还在不停的上演，里面的主人公们也许已经有了很大的变化了，已经大四的吴雨霏是不是快如愿取得出国深造的机会？满怀斗志的刘翔和李宜颖是否已经进入某所著名大学了呢？怀着明星梦的吴珂是否已经在某所艺术学院正在朝着明星的方向前行呢？吴凯是否已经快实现他当一名优秀体育老师的愿望了呢？査毓佳是不是正在某大学主持快成为支持人了？宁舍建是不是已经在休中读高中？还有辛劳的贺老师是不是已经又带了一批高一新生？小甘萍估计也快升初中了，陈刘慧美小朋友或许已经是平民中学最优秀的学生了，那些哭鼻子的小朋友也都独立的生活在了平民小学……</p>
<p>也许我看晚了，但这样的片子越久越有味道，感谢BBC，将这些片段串联成精彩的故事，镜头朴素，繁多却不拖沓，剪辑快速却绝不落下重要镜头，这也让我学到了不少的技巧。也许有一天我的移动硬盘会坏掉，文件也会丢失，可是它已经被我永久的珍藏。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>来自：<a href="http://412026208.diandian.com/post/2011-01-02/4675523">独领</a></p>
<p>来自BBC的纪录片，讲中国中小学生的成长故事。07年的春天摄制组来到中国安徽一个名不见经传的小县城——休宁，他们选中了三所学校，省重点的休宁高中，非重点的海洋中学，以及县城郊区的慈善小学：平民小学，对其中数位学生进行近一年的跟踪报道，欲偏盖整个中国的学校。</p>
<p>休宁人有两样值得骄傲的东西：tea and teach。在中国目前的教育系统下值得骄傲的只有升学率，休中的升学率当然是不错的，它向各大著名高校输入了无数的人才，而今年的top student吴雨霏（奇怪，这三个字只需输入拼音搜狗就自动弹出了）是近十年来休中最优秀的学生。由后面的内容我们知道，吴雨霏考了安徽省状元，进了清华，创造了历史，摄制组未卜先知，选人也太绝了。班主任贺老师教英语，面对镜头他总是用流利的英语说话，他说：吴雨霏不仅是学校的优秀学生，还是全省的甚至全国的优秀学生，“in my heart ,the beast.”。贺老师消瘦、憔悴，充满激情，尽职尽责，他是所有优秀高中老师的代表。</p>
<p>纪录片对高三艰苦生活的展现还是比较到位的。早上5点45起床，学习到晚上10点40，老师还会到教室去赶走那些试图继续留在教室学习的学生，更加刻苦的如吴雨霏在学校外面租有一间房子，以便下了晚自习还可以继续学习。这些都是我们曾经经历的，许多没租房子的学生会偷偷在寝室点灯看书，或者跑到走廊有灯的地方去。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[sublime text 怎么在新标签中打开文件?]]></title>
    <link href="haskio.github.io/2014/04/28/sublime-text-%E6%80%8E%E4%B9%88%E5%9C%A8%E6%96%B0%E6%A0%87%E7%AD%BE%E4%B8%AD%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6/"/>
    <id>haskio.github.io/2014/04/28/sublime-text-怎么在新标签中打开文件/</id>
    <published>2014-04-28T15:52:00.000Z</published>
    <updated>2015-05-24T02:40:37.595Z</updated>
    <content type="html"><![CDATA[<p>在 use 配置里 增加：</p>
<p>open_files_in_new_window并改为false，像下面这样：</p>
<p><code>&amp;quot;openfilesinnewwindow&amp;quot;: false，</code></p>
<p>结果又出现保持问题：</p>
<p>Error trying to parse settings</p>
<p>搜索后发现，sublime text 的配置，最后一行是不可以加逗号的。</p>
<p>如果你是放在最后，需要把原来上面的那行加上逗号“,”，本行去掉。</p>
<p>在这里，有汉化包可以用：</p>
<p><a href="http://www.sublimetextcn.com/" target="_blank" rel="external">http://www.sublimetextcn.com/</a><br><a id="more"></a><br>在使用了汉化包之后，又出现光标又粗又大的问题。。</p>
<p>结果是需要在设置里设置光标的像素，接着增加设置吧，需要设置的内容如下：</p>
<ul>
<li>caret_extra_top 超出光标上方的额外距离</li>
<li>caret_extra_bottom&nbsp;超出光标下方的额外距离</li>
<li>caret_extra_width&nbsp;超出光标宽度</li>
</ul>
<p>增加配置代码：</p>
<p>`</p><p>“caretextratop”: 1,</p>
<p>“caretextrabottom”: 1,</p>
<p>“caretextrawidth”: 1<br>`</p><p></p>
<p>解决方案来自：</p>
<p><a href="http://www.kankanews.com/ICkengine/archives/106640.shtml" target="_blank" rel="external">http://www.kankanews.com/ICkengine/archives/106640.shtml</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在 use 配置里 增加：</p>
<p>open_files_in_new_window并改为false，像下面这样：</p>
<p><code>&amp;quot;openfilesinnewwindow&amp;quot;: false，</code></p>
<p>结果又出现保持问题：</p>
<p>Error trying to parse settings</p>
<p>搜索后发现，sublime text 的配置，最后一行是不可以加逗号的。</p>
<p>如果你是放在最后，需要把原来上面的那行加上逗号“,”，本行去掉。</p>
<p>在这里，有汉化包可以用：</p>
<p><a href="http://www.sublimetextcn.com/">http://www.sublimetextcn.com/</a><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[robomind 下载]]></title>
    <link href="haskio.github.io/2014/04/26/robomind-%E4%B8%8B%E8%BD%BD/"/>
    <id>haskio.github.io/2014/04/26/robomind-下载/</id>
    <published>2014-04-26T01:21:00.000Z</published>
    <updated>2015-05-24T02:40:41.118Z</updated>
    <content type="html"><![CDATA[<p>robomind 下载</p>
<p>rebomind官网没节操啊，下载坑死人了，怎么都下不下来。</p>
<p>百度已经是大局域网了，搜索一点鸟语的东西是相当的不给力，无论如何都不行。</p>
<p>最后换到bing上，哗哗几下就找出来一个下载地址<br><a id="more"></a><br><a href="http://halma.home.xs4all.nl/robomind/RoboMindSetup4.3.exe" target="_blank" rel="external">http://halma.home.xs4all.nl/robomind/RoboMindSetup4.3.exe</a></p>
<p>或者可以自动跳转的后台地址的</p>
<p><a href="http://www.robomind.net/downloads/robosetup.htm" target="_blank" rel="external">http://www.robomind.net/downloads/robosetup.htm</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>robomind 下载</p>
<p>rebomind官网没节操啊，下载坑死人了，怎么都下不下来。</p>
<p>百度已经是大局域网了，搜索一点鸟语的东西是相当的不给力，无论如何都不行。</p>
<p>最后换到bing上，哗哗几下就找出来一个下载地址<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[知乎：epoll 的原理]]></title>
    <link href="haskio.github.io/2014/04/23/%E7%9F%A5%E4%B9%8E%EF%BC%9Aepoll-%E7%9A%84%E5%8E%9F%E7%90%86/"/>
    <id>haskio.github.io/2014/04/23/知乎：epoll-的原理/</id>
    <published>2014-04-22T20:46:28.000Z</published>
    <updated>2015-05-24T02:37:02.177Z</updated>
    <content type="html"><![CDATA[<p>来源知乎<a href="http://www.zhihu.com/question/20122137" target="_blank" rel="external">蓝形参</a>的回答：</p>
<p>首先我们来定义流的概念，一个流可以是文件，socket，pipe等等可以进行I/O操作的内核对象。</p>
<p>不管是文件，还是套接字，还是管道，我们都可以把他们看作流。</p>
<p>之后我们来讨论I/O的操作，通过read，我们可以从流中读入数据；通过write，我们可以往流写入数据。现在假定一个情形，我们需要从流中读数据，但是流中还没有数据，（典型的例子为，客户端要从socket读如数据，但是服务器还没有把数据传回来），这时候该怎么办？</p>
<p>阻塞。阻塞是个什么概念呢？比如某个时候你在等快递，但是你不知道快递什么时候过来，而且你没有别的事可以干（或者说接下来的事要等快递来了才能做）；那么你可以去睡觉了，因为你知道快递把货送来时一定会给你打个电话（假定一定能叫醒你）。</p>
<p>非阻塞忙轮询。接着上面等快递的例子，如果用忙轮询的方法，那么你需要知道快递员的手机号，然后每分钟给他挂个电话：“你到了没？”</p>
<p>很明显一般人不会用第二种做法，不仅显很无脑，浪费话费不说，还占用了快递员大量的时间。<br><a id="more"></a><br>大部分程序也不会用第二种做法，因为第一种方法经济而简单，经济是指消耗很少的CPU时间，如果线程睡眠了，就掉出了系统的调度队列，暂时不会去瓜分CPU宝贵的时间片了。</p>
<p>为了了解阻塞是如何进行的，我们来讨论缓冲区，以及内核缓冲区，最终把I/O事件解释清楚。缓冲区的引入是为了减少频繁I/O操作而引起频繁的系统调用（你知道它很慢的），当你操作一个流时，更多的是以缓冲区为单位进行操作，这是相对于用户空间而言。对于内核来说，也需要缓冲区。</p>
<p>假设有一个管道，进程A为管道的写入方，Ｂ为管道的读出方。</p>
<p>假设一开始内核缓冲区是空的，B作为读出方，被阻塞着。然后首先A往管道写入，这时候内核缓冲区由空的状态变到非空状态，内核就会产生一个事件告诉Ｂ该醒来了，这个事件姑且称之为“缓冲区非空”。</p>
<p>但是“缓冲区非空”事件通知B后，B却还没有读出数据；且内核许诺了不能把写入管道中的数据丢掉这个时候，Ａ写入的数据会滞留在内核缓冲区中，如果内核也缓冲区满了，B仍未开始读数据，最终内核缓冲区会被填满，这个时候会产生一个I/O事件，告诉进程A，你该等等（阻塞）了，我们把这个事件定义为“缓冲区满”。</p>
<p>假设后来Ｂ终于开始读数据了，于是内核的缓冲区空了出来，这时候内核会告诉A，内核缓冲区有空位了，你可以从长眠中醒来了，继续写数据了，我们把这个事件叫做“缓冲区非满”</p>
<p>也许事件Y1已经通知了A，但是A也没有数据写入了，而Ｂ继续读出数据，知道内核缓冲区空了。这个时候内核就告诉B，你需要阻塞了！，我们把这个时间定为“缓冲区空”。</p>
<p>这四个情形涵盖了四个I/O事件，缓冲区满，缓冲区空，缓冲区非空，缓冲区非满（注都是说的内核缓冲区，且这四个术语都是我生造的，仅为解释其原理而造）。这四个I/O事件是进行阻塞同步的根本。（如果不能理解“同步”是什么概念，请学习操作系统的锁，信号量，条件变量等任务同步方面的相关知识）。</p>
<p>然后我们来说说阻塞I/O的缺点。但是阻塞I/O模式下，一个线程只能处理一个流的I/O事件。如果想要同时处理多个流，要么多进程(fork)，要么多线程(pthread_create)，很不幸这两种方法效率都不高。</p>
<p>于是再来考虑非阻塞忙轮询的I/O方式，我们发现我们可以同时处理多个流了（把一个流从阻塞模式切换到非阻塞模式再此不予讨论）：</p>
<p>while true {</p>
<p>for i in stream[]; {</p>
<p>if i has data</p>
<p>read until unavailable</p>
<p>}</p>
<p>}</p>
<p>我们只要不停的把所有流从头到尾问一遍，又从头开始。这样就可以处理多个流了，但这样的做法显然不好，因为如果所有的流都没有数据，那么只会白白浪费CPU。这里要补充一点，阻塞模式下，内核对于I/O事件的处理是阻塞或者唤醒，而非阻塞模式下则把I/O事件交给其他对象（后文介绍的select以及epoll）处理甚至直接忽略。</p>
<p>为了避免CPU空转，可以引进了一个代理（一开始有一位叫做select的代理，后来又有一位叫做poll的代理，不过两者的本质是一样的）。这个代理比较厉害，可以同时观察许多流的I/O事件，在空闲的时候，会把当前线程阻塞掉，当有一个或多个流有I/O事件时，就从阻塞态中醒来，于是我们的程序就会轮询一遍所有的流（于是我们可以把“忙”字去掉了）。代码长这样:</p>
<p>while true {</p>
<p>select(streams[])</p>
<p>for i in streams[] {</p>
<p>if i has data</p>
<p>read until unavailable</p>
<p>}</p>
<p>}</p>
<p>于是，如果没有I/O事件产生，我们的程序就会阻塞在select处。但是依然有个问题，我们从select那里仅仅知道了，有I/O事件发生了，但却并不知道是那几个流（可能有一个，多个，甚至全部），我们只能无差别轮询所有流，找出能读出数据，或者写入数据的流，对他们进行操作。</p>
<p>但是使用select，我们有O(n)的无差别轮询复杂度，同时处理的流越多，每一次无差别轮询时间就越长。再次</p>
<p>说了这么多，终于能好好解释epoll了</p>
<p>epoll可以理解为event poll，不同于忙轮询和无差别轮询，epoll之会把哪个流发生了怎样的I/O事件通知我们。此时我们对这些流的操作都是有意义的。（复杂度降低到了O(k)，k为产生I/O事件的流的个数，也有认为O(1)的[更新 1]）</p>
<p>在讨论epoll的实现细节之前，先把epoll的相关操作列出[更新 2]：</p>
<p>epoll_create 创建一个epoll对象，一般epollfd = epoll_create()</p>
<p>epoll_ctl （epoll_add/epoll_del的合体），往epoll对象中增加/删除某一个流的某一个事件</p>
<p>比如</p>
<p>epoll_ctl(epollfd, EPOLL_CTL_ADD, socket, EPOLLIN);//有缓冲区内有数据时epoll_wait返回</p>
<p>epoll_ctl(epollfd, EPOLL_CTL_DEL, socket, EPOLLOUT);//缓冲区可写入时epoll_wait返回</p>
<p>epoll_wait(epollfd,…)等待直到注册的事件发生</p>
<p>（注：当对一个非阻塞流的读写发生缓冲区满或缓冲区空，write/read会返回-1，并设置errno=EAGAIN。而epoll只关心缓冲区非满和缓冲区非空事件）。</p>
<p>一个epoll模式的代码大概的样子是：</p>
<p>while true {</p>
<p>active_stream[] = epoll_wait(epollfd)</p>
<p>for i in active_stream[] {</p>
<p>read or write till unavailable</p>
<p>}</p>
<p>}</p>
<p>限于篇幅，我只说这么多，以揭示原理性的东西，至于epoll的使用细节，请参考man和google，实现细节，请参阅linux kernel source。</p>
<p>======================================</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>来源知乎<a href="http://www.zhihu.com/question/20122137">蓝形参</a>的回答：</p>
<p>首先我们来定义流的概念，一个流可以是文件，socket，pipe等等可以进行I/O操作的内核对象。</p>
<p>不管是文件，还是套接字，还是管道，我们都可以把他们看作流。</p>
<p>之后我们来讨论I/O的操作，通过read，我们可以从流中读入数据；通过write，我们可以往流写入数据。现在假定一个情形，我们需要从流中读数据，但是流中还没有数据，（典型的例子为，客户端要从socket读如数据，但是服务器还没有把数据传回来），这时候该怎么办？</p>
<p>阻塞。阻塞是个什么概念呢？比如某个时候你在等快递，但是你不知道快递什么时候过来，而且你没有别的事可以干（或者说接下来的事要等快递来了才能做）；那么你可以去睡觉了，因为你知道快递把货送来时一定会给你打个电话（假定一定能叫醒你）。</p>
<p>非阻塞忙轮询。接着上面等快递的例子，如果用忙轮询的方法，那么你需要知道快递员的手机号，然后每分钟给他挂个电话：“你到了没？”</p>
<p>很明显一般人不会用第二种做法，不仅显很无脑，浪费话费不说，还占用了快递员大量的时间。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[【转】这可不是阿里黑。。]]></title>
    <link href="haskio.github.io/2014/04/20/2014-04-20-%E8%BF%99%E5%8F%AF%E4%B8%8D%E6%98%AF%E9%98%BF%E9%87%8C%E9%BB%91/"/>
    <id>haskio.github.io/2014/04/20/2014-04-20-这可不是阿里黑/</id>
    <published>2014-04-20T06:16:07.000Z</published>
    <updated>2015-05-24T02:41:25.492Z</updated>
    <content type="html"><![CDATA[<p>最近的平台想要上阿里云，关注了一下阿里云的相关事情，嗯，真不是在黑阿里云。</p>
<p>以下转摘：</p>
<p>正在使用阿里云监控服务，前天登录发现我的服务监控全都丢失了（正在监控mysql和一些其他服务）。。</p>
<p>今天客服打电话过来说了下丢失的原因：这是一个测试产品，所以不稳定是正常的。<br><a id="more"></a><br>一个产品，你要是测试产品，就老老实实标记出来让用户知道，但你不提示用户，让用户误以为安全可用，这是什么行为？再者，产品功能巨大调整，事前都不通知用户，你把正在用你产品的人当什么了？</p>
<p>和客服对话详情如下：</p>
<p><img src="http://ww1.sinaimg.cn/large/7348e79dgw1efm3e73kulj20m41g50zc.jpg" alt="请输入图片描述"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近的平台想要上阿里云，关注了一下阿里云的相关事情，嗯，真不是在黑阿里云。</p>
<p>以下转摘：</p>
<p>正在使用阿里云监控服务，前天登录发现我的服务监控全都丢失了（正在监控mysql和一些其他服务）。。</p>
<p>今天客服打电话过来说了下丢失的原因：这是一个测试产品，所以不稳定是正常的。<br>]]>
    
    </summary>
    
      <category term="云计算" scheme="haskio.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
      <category term="阿里云" scheme="haskio.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="IT" scheme="haskio.github.io/categories/IT/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ipad mini 配件那些事]]></title>
    <link href="haskio.github.io/2014/04/16/ipad-mini-%E9%85%8D%E4%BB%B6%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>haskio.github.io/2014/04/16/ipad-mini-配件那些事/</id>
    <published>2014-04-16T07:05:00.000Z</published>
    <updated>2015-05-24T02:40:58.728Z</updated>
    <content type="html"><![CDATA[<h1 id="ipad_mini_配件那些事">ipad mini 配件那些事</h1><h2 id="@_2014-4-16">@ 2014.4.16</h2><p>从有了这些手持开始，就有了贴膜、保护套、支架之类。我也养成了这种习惯，但是也有被忽悠的情况，花了钱没发现有什么作用，搞的很是郁闷。不得不记录一下</p>
<h3 id="贴膜，必须">贴膜，必须</h3><p>除了反光膜，其他的只要没有影响亮度都一样。所以路边10几块钱就可以搞定，非要去搞一个原装的或者高清的其实没有什么意义。有点作用的，也就是不反光的，直接买水之境的吧，其他的都是浮云。</p>
<h3 id="皮套，必须">皮套，必须</h3><p>裸奔的不是不行，不过要是经常带着，在包里扔来扔去的，不如来一个皮套。<br><a id="more"></a><br>不得不说，这个苹果官方也出来 smartcover，导致了一批追求官方的心理，但是官方是贵的要死。虽然是打着可休眠、可唤醒的说法，不过一般的皮套也都可以实现休眠。唤醒这功能，有用么？多按一下电源的事。</p>
<p>而且各种高仿、流出等也都不便宜，而且还未必是真的，劝你不要花这个钱了。我就是花了100多的大洋，买了一看感觉就是路边货，非常的郁闷。</p>
<p>完全没不要买原装的。清水壳、或者几十块的就可以。真皮什么更没必要。</p>
<h3 id="电源充电线">电源充电线</h3><p>多几根是好事，最好带点，副厂的就挺好。原装的，除了品牌xx，其他没啥用途。</p>
<p>不得不说，有一些线是不达标的，当然不仅仅是iphone、ipad的。我就买过几次诺基亚口的线，完全不能使用，主要原因是一线多口的，真不如买个只有一个口的。<br>目前来看，一线多口的基本不太好使，最好不要买。</p>
<p>ipad的线，貌似跟其他的不一样，最好买有点口碑的副厂，或者当场实验一下，否则不能用的几率很大。</p>
<h3 id="支架">支架</h3><p>有一个好支架会很幸福，八爪鱼吧。</p>
<h3 id="底座">底座</h3><p>完全不知道用来干啥，没需求没爱好，不烧这钱</p>
<h3 id="笔">笔</h3><p>不得不说这是最近想入的，结果看了很多评测、说明，发现要不就买个几块钱的电容笔，要不就买个高大尚的会画笔，中间的很让你不上上去很难受，买了之后发现跟几块钱的没区别的会让你更难受。</p>
<p>高大上的而且还没啥需求，脑袋一热买了结果回来吃灰，也不是不可能发生。目前先观望evernote那款JOT Script，其他的感觉都是渣。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="ipad_mini_配件那些事">ipad mini 配件那些事</h1><h2 id="@_2014-4-16">@ 2014.4.16</h2><p>从有了这些手持开始，就有了贴膜、保护套、支架之类。我也养成了这种习惯，但是也有被忽悠的情况，花了钱没发现有什么作用，搞的很是郁闷。不得不记录一下</p>
<h3 id="贴膜，必须">贴膜，必须</h3><p>除了反光膜，其他的只要没有影响亮度都一样。所以路边10几块钱就可以搞定，非要去搞一个原装的或者高清的其实没有什么意义。有点作用的，也就是不反光的，直接买水之境的吧，其他的都是浮云。</p>
<h3 id="皮套，必须">皮套，必须</h3><p>裸奔的不是不行，不过要是经常带着，在包里扔来扔去的，不如来一个皮套。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[乱七八糟的想法又一次满篇]]></title>
    <link href="haskio.github.io/2014/04/13/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F%E7%9A%84%E6%83%B3%E6%B3%95%E5%8F%88%E4%B8%80%E6%AC%A1%E6%BB%A1%E7%AF%87/"/>
    <id>haskio.github.io/2014/04/13/乱七八糟的想法又一次满篇/</id>
    <published>2014-04-13T08:10:00.000Z</published>
    <updated>2015-05-24T02:38:41.279Z</updated>
    <content type="html"><![CDATA[<p>@去成都的航班上记录</p>
<p>@北京 to 成都的航班上记录</p>
<h2 id="夜晚，在飞机上鸟瞰大地。">夜晚，在飞机上鸟瞰大地。</h2><p>每当无所事事的时候，就会胡思乱想。偏偏想的东西都还很靠谱。很是能解决一些现实中的问题，或者是工作，或者是生活，也或者是其他。</p>
<p>只不过，每次都来不及记录。有想法的时候，基本上都是在起飞或者下降的时候，没有条件记录这些很不错的想法。</p>
<p>等到有条件了，就差不多都忘光了：等到可以开电子设备或者下飞机了，基本上都忘的差不多了。</p>
<p>当然了，也可以用笔纸记录，不过字写的难看，经常写完自己都不认识了，而且缺乏总结，每次写完的东西都乱扔，还是解决不了这个问题。</p>
<p>因此，可以看出来，给自己一个空的时间是多么重要，可能在一个很短的时间，就可以发酵出很美丽的成功。<br><a id="more"></a></p>
<h2 id="应该有一个发呆的计划了">应该有一个发呆的计划了</h2><p>在一本小说里，《奥术神座》 作者为女主角安排了每月静坐半天的计划，虽然收效是在小说里的描写，但是我认为可以借鉴，每天给自己20分钟左右的喝茶或者发呆时间。</p>
<p>让你的思想和空间有一个发酵的空间，虽然种子种下去，总会成长，但是如果不经常查看，那么就会错过了阶段的状态。</p>
<p>于是在开始写这篇日记的时候，很干净利索的忘记了在最开始我在想什么了。就好像你养了一盆昙花，开花的时候忘记记录，等到第二天，可能连回忆都忘记了。</p>
<h2 id="如何记笔记">如何记笔记</h2><p>开始的时候，我用evernote，记工作的，也记一些个人的和生活的。后来发现这样不太好管理，并且一些私密的内容容易在公司中被别人看见。于是就又用了wiz，用来记录工作中的内容，不过wiz并不是很堪用，尤其是mac 版本的，经常崩溃会丟内容。并且有一些日志或者想法之类的，并不方便记录。</p>
<p>后来为了方便的发表博客，开始用了 mou、marsedit和ulysses，</p>
<h3 id="mou">mou</h3><p>其中mou是用来做markdown 格式编辑，实时预览非常的不错，只是存储是在本地，并且没有办法用来做发布。</p>
<h3 id="ulysses">ulysses</h3><p>ulysses本来也是做mardown编辑的。在很多人鼓吹这个东西多么多么牛x，多么多好用，多么多么可以无缝写作的宣传中，我也用了一下。最后发现其实就是带目录管理</p>
<p>+iCloud而已，预览方便没有，只能靠写完了再调整。格式方面也没有mou那么方便，同样没有办法做发布，最后这个工作在我手里变成了单纯的内容存储。</p>
<h3 id="marsedit">marsedit</h3><p>而marsedit 是当离线客户端编辑器来用，大部分功能都比较好，就是不支持markdown，以至于需要在写完东西之后，先输出html，然后再贴过来，好繁琐。</p>
<p>本来这也就算了，因为mac下就没几个博客的离线客户端，好用的更难找，虽然这样繁琐点，但是起码能玩转，最后能帮你搞定问题。因为直接贴markdown格式的到博客是风险很大的，因为你根本不知道样式会变成什么样，格式完全没想想的那么美好。</p>
<p>但是在typecho 升级成最新的开发版之后，就死活链接不上了，之后就再没怎么用过。</p>
<p>简单来说，真不堪用啊。</p>
<h3 id="dayone">dayone</h3><p>不得不说，这是在11年12年用的比较多一个软件，日记写了不少，但是问题有：1、格式少，无法多样式复杂的内容， 2 无法发布无法发布。</p>
<p>到今年，因为把博客当作了日常杂事以及吐槽的地方，日记就变成的比较不好定位了，都在在日记里，dayone 无法发布出来，又需要倒腾一边，直接在ulysses 或者mou里写还省点事，于是现在也搁置了。</p>
<h3 id="总结">总结</h3><p>老实说现在我也不知道怎么记，怎么存，怎么发了，反正内容丢的那里都是，文章也东一篇西一篇的，因为目前都没有什么好的方案，也懒得整合了。希望能有一个一站式的解决方案，从日常的片段记录，到样式的编辑，再到发布，那时候我想肯定会好好把手里的这堆东西都整理整理。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>@去成都的航班上记录</p>
<p>@北京 to 成都的航班上记录</p>
<h2 id="夜晚，在飞机上鸟瞰大地。">夜晚，在飞机上鸟瞰大地。</h2><p>每当无所事事的时候，就会胡思乱想。偏偏想的东西都还很靠谱。很是能解决一些现实中的问题，或者是工作，或者是生活，也或者是其他。</p>
<p>只不过，每次都来不及记录。有想法的时候，基本上都是在起飞或者下降的时候，没有条件记录这些很不错的想法。</p>
<p>等到有条件了，就差不多都忘光了：等到可以开电子设备或者下飞机了，基本上都忘的差不多了。</p>
<p>当然了，也可以用笔纸记录，不过字写的难看，经常写完自己都不认识了，而且缺乏总结，每次写完的东西都乱扔，还是解决不了这个问题。</p>
<p>因此，可以看出来，给自己一个空的时间是多么重要，可能在一个很短的时间，就可以发酵出很美丽的成功。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[如果要做一个跑步游戏——社交网络下的运动]]></title>
    <link href="haskio.github.io/2014/04/13/%E5%A6%82%E6%9E%9C%E8%A6%81%E5%81%9A%E4%B8%80%E4%B8%AA%E8%B7%91%E6%AD%A5%E6%B8%B8%E6%88%8F%E2%80%94%E2%80%94%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E4%B8%8B%E7%9A%84%E8%BF%90%E5%8A%A8/"/>
    <id>haskio.github.io/2014/04/13/如果要做一个跑步游戏——社交网络下的运动/</id>
    <published>2014-04-13T08:06:00.000Z</published>
    <updated>2015-05-24T02:38:03.520Z</updated>
    <content type="html"><![CDATA[<p>2014.3.7  某次飞机上的各种想</p>
<p>现在的游戏可以说是多种多样，有的已经趣味化、慢慢走向生活，而有的依旧是单纯为了让人们消磨时间。这块很容易引起争议，因为肯定会有一些游戏商挑出来说自己其实是做的智力游戏云云。我不是游戏界的，也不是做游戏的，有些事情只是想想，当然也只能想想，因此不妨跟大家分享一下自己的看法。</p>
<p>首先从运动和游戏开始。游戏前面已经简单提了一下。在游戏方面，比较契合运动会让人首先想起来wii 和kinect，前者靠遥控手柄，以及其他各种配件，来让人玩各种各种的体育、休闲以及竞技游戏，尤其是wii fit，测量体重都可以，经过后台软件的支撑，帮助人做减肥的记录是轻而易举的事情。</p>
<p>后者更是最近几年虚拟技术的一大成果，不是我想捧微软，而实际上kinect的也不是微软发明的，而是一家专注体感的公司，被微软发现并运用在游戏中。kinect比wii强的地方，首先是脱离了遥控器等配件，在进行交互的时候，你的整个身体都是遥控器。换句话说，系统可以真正的感知你的动作，比如挥手、抬脚、转身、跳跃等，并且感知速度还不慢，如果你这边挥了一下手，系统过了2分钟才计算出来，等计算完之后，假使是在赛车游戏中，别的车都跑的没影了，你的还在原地不动，傻傻的等着你挥手呢。kinect当然没有你想想的那么慢，实际上，在一些游戏里还是比较灵敏的，比如说运动会、格斗等。<br><a id="more"></a><br>这就是xbox+kinect吸引人的地方，曾经我把游戏机放到公司里，每天中午都排着长队在进行体育比赛或者格斗，两组人都累的气喘吁吁的，完全把友谊第一，比赛第二给扔到一边了，一定要分个输赢。</p>
<p>这些游戏最大的问题是，1、没有社交化，如果没有人跟在一个屋子里玩，那么你就只能跟电脑pk了；2、太虚拟了，运动没有着力点。</p>
<p>第1点还好说，希望微软或者其他游戏商继续努力，开发出运动会online、或者保龄球online这样的游戏，让你可以和远方的朋友一起来个本垒打，在网络已经开始光纤入户的今天，相信技术上已经不是问题。</p>
<p>第2点就是硬伤了，物理原理我们都知道，作用力都是相对的，如果你击打一下沙袋，你打在沙袋上多大的力，沙袋就会反馈给你多少。跳高、跑步包括投掷，都是这样。而感知游戏最大的问题就是，你挥舞的对象是空气，如果是拳击游戏，那么短时间玩玩还可以，玩的时间长了就会肌肉受损，而且如果用力过程，还会容易拉伤。想想一下你要对着前面的沙袋重重的打过去，结果快要打到的时候沙袋跑了的时候那种难受；也或者是你在上楼梯，本来以为上面会一个台阶，结果一下迈空的感觉（尤其是在黑暗中上楼时）。所以后来kinect2的疲软，跟这个有莫大的关系。</p>
<p>好吧，我的想法来了，虽然不现实，但是可以随便说说么。灵感来源最近的2个热点：1、运动手环、2、跑步机。</p>
<p>1、运动手环这个东西最近越来越火，很多三流的或者之前根本没有的公司都开始做这块了，不过运动手环炒的是一个概念，买了的人，大多没几天就过劲了。没买过的，依旧在很好奇的观望。</p>
<p>2、跑步机可以说是目前对不好空气的最好的事件营销，从跑步开始热门开始，很多人都在关注健康、锻炼。而各种糟糕的天气可以说是一个障碍（我是很不在乎，不过我也不跑步），于是就不少人开始想其他的办法，比如去健身房，土豪点的，买一个家用跑步机。</p>
<p>以上两个热点可以说是不存在什么假跑或者对着空气空使劲的问题，但是都存在比较大的问题。</p>
<p>先说手环，其实如果把手环当作一个端来看的话，最主要的并不是说它统计了你走了多少步、消耗了多少热量，以及心跳是多少，而是需要建立一个圈子：谁在跟你一起用，别人用的效果就是。</p>
<p>跑步机也是，我比较纳闷的事，现在什么都开始云端化了，但是健身房的各种东西却没有动静，不但如此，对用户的信息也是漠不关心。健身房除了每天派人在各种地方做促销，让人办卡，对客户一周去几次健身房、每次跑了多少公里却漠不关心。想来对于健身房来说，最好的客户就是按年办卡，一次不去也说不定。不过这是一种畸形的模式，应该不会长久。比较合理的模式应该是越来越多去健身房的用户（拿互联网的说法就是活跃用户）。而这么做，可以第一步各种设备都智能话，用户在使用时，可以建立自己的账号信息，来记录运动的时间，锻炼的成绩等。如果能把计费等都放进去更好。</p>
<p>第二步呢，可以把手环也一起拿过来讨论</p>
<p>无论是那种场景，我们营造的都不是一个孤独的星球，哪怕那里多么的美好，而是一个更好的社交的圈子。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>2014.3.7  某次飞机上的各种想</p>
<p>现在的游戏可以说是多种多样，有的已经趣味化、慢慢走向生活，而有的依旧是单纯为了让人们消磨时间。这块很容易引起争议，因为肯定会有一些游戏商挑出来说自己其实是做的智力游戏云云。我不是游戏界的，也不是做游戏的，有些事情只是想想，当然也只能想想，因此不妨跟大家分享一下自己的看法。</p>
<p>首先从运动和游戏开始。游戏前面已经简单提了一下。在游戏方面，比较契合运动会让人首先想起来wii 和kinect，前者靠遥控手柄，以及其他各种配件，来让人玩各种各种的体育、休闲以及竞技游戏，尤其是wii fit，测量体重都可以，经过后台软件的支撑，帮助人做减肥的记录是轻而易举的事情。</p>
<p>后者更是最近几年虚拟技术的一大成果，不是我想捧微软，而实际上kinect的也不是微软发明的，而是一家专注体感的公司，被微软发现并运用在游戏中。kinect比wii强的地方，首先是脱离了遥控器等配件，在进行交互的时候，你的整个身体都是遥控器。换句话说，系统可以真正的感知你的动作，比如挥手、抬脚、转身、跳跃等，并且感知速度还不慢，如果你这边挥了一下手，系统过了2分钟才计算出来，等计算完之后，假使是在赛车游戏中，别的车都跑的没影了，你的还在原地不动，傻傻的等着你挥手呢。kinect当然没有你想想的那么慢，实际上，在一些游戏里还是比较灵敏的，比如说运动会、格斗等。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[面向高吞吐量/低延迟 Java 应用的 GC 优化 (Swapnil Ghike)]]></title>
    <link href="haskio.github.io/2014/04/12/%E9%9D%A2%E5%90%91%E9%AB%98%E5%90%9E%E5%90%90%E9%87%8F-%E4%BD%8E%E5%BB%B6%E8%BF%9F-Java-%E5%BA%94%E7%94%A8%E7%9A%84-GC-%E4%BC%98%E5%8C%96-Swapnil-Ghike/"/>
    <id>haskio.github.io/2014/04/12/面向高吞吐量-低延迟-Java-应用的-GC-优化-Swapnil-Ghike/</id>
    <published>2014-04-12T08:57:00.000Z</published>
    <updated>2015-05-21T07:18:46.042Z</updated>
    <content type="html"><![CDATA[<p>来自 LinkedIn 工程师 Blog，<br>感觉很不错的文章，不过是英文的，求翻译</p>
<p><a href="http://engineering.linkedin.com/garbage-collection/garbage-collection-optimization-high-throughput-and-low-latency-java-applications" target="_blank" rel="external">原文</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>来自 LinkedIn 工程师 Blog，<br>感觉很不错的文章，不过是英文的，求翻译</p>
<p><a href="http://engineering.linkedin.com/garbage-collection/garbage-collection-optimi]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[4月4日到8日的外出]]></title>
    <link href="haskio.github.io/2014/04/11/2014-04-11-4%E6%9C%884%E6%97%A5%E5%88%B08%E6%97%A5%E7%9A%84%E5%A4%96%E5%87%BA/"/>
    <id>haskio.github.io/2014/04/11/2014-04-11-4月4日到8日的外出/</id>
    <published>2014-04-11T09:40:01.000Z</published>
    <updated>2015-05-24T02:41:33.605Z</updated>
    <content type="html"><![CDATA[<h2 id="0、_从北京到南京">0、 从北京到南京</h2><p>4号 从北京出发，下午到南京。<br>到南京集合。<br>提车，准备干粮等，出发去太平湖。</p>
<h2 id="1-第一天（4-4）_从南京到太平湖">1.第一天（4.4） 从南京到太平湖</h2><p>2.1 从南京到芜湖</p>
<p>吃饭+小溜达</p>
<p>2.2.从芜湖到桃花潭 查济</p>
<p>住宿 +溜达<br>时间来得及，就去查济。来不及就住桃花潭。</p>
<h2 id="第二天（4-5）_太平湖_和齐云山">第二天（4.5） 太平湖 和齐云山</h2><p>2.3 查济</p>
<p>2.4 太平湖</p>
<p>2.5 休宁县，吃饭 住宿</p>
<p>时间来得及，就去齐云山</p>
<h2 id="第三天（4-6）">第三天（4.6）</h2><p>齐云山-》 汤口</p>
<h2 id="第四天（4-7）">第四天（4.7）</h2><a id="more"></a>
<p>宣城</p>
<p>1.春节期间，太平到黟县的班车一天只有早上一班，费用是22元，行程两个半小时，不过貌似可以只买到宏村，费用便宜2元，我都是买了之后才想起的，后悔啊。<br>2.宏村到屯溪每小时有一班车，但是中午12点这个时间点是没有的。可以乘坐宏村到黟县的公交（2元），再转黟县到屯溪的班车。齐云山就在黟县到屯溪的中途，车费是6元。<br>3.宏村门票是104元，虽然很有徽派建筑特色，但是对于一个村而言定价还是太高了。宏村查证件很严，售票员曰景区属于私人公司开发的，相当的无语。听外面揽客的小贩讲平时都是执行的优惠价格52元，只是春节这几天才开始收的全价，抢人啊。<br>4.齐云山门票是旺季是75元，淡季是55元，学生证不分淡旺季是38元。索道是上行26元，下行14元。<br>5.从省道326线进入齐云山，左侧道路通向登封桥，是步行上山的起点，右侧则是通往上山索道。齐云山索道属于老式索道，车厢不多，速度也很慢，节约不了多少时间。目测从登封桥到索道上站这段距离上山最多1.5小时，下山也就是半小时左右。<br>6.齐云山有班车直达休宁，车费4元，就在登封桥等就可以，不用走回省道。<br>7.休宁到屯溪的班车很多，但不是在汽车站，而是在刚进休宁城区的路口，车费是4.5元。<br>8.黄山汽车客运总站位于屯溪城外的齐云大道，省际间的长途客运都是在这个汽车站。屯溪到杭州每一小时就有一班，费用是89元。<br>9.客运总站背后就有不少住宿的地点，如果是早班车建议就住在总站附近。我住的泰丰宾馆标间是80元，条件还可以，就是晚上面朝车站有点吵。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0、_从北京到南京">0、 从北京到南京</h2><p>4号 从北京出发，下午到南京。<br>到南京集合。<br>提车，准备干粮等，出发去太平湖。</p>
<h2 id="1-第一天（4-4）_从南京到太平湖">1.第一天（4.4） 从南京到太平湖</h2><p>2.1 从南京到芜湖</p>
<p>吃饭+小溜达</p>
<p>2.2.从芜湖到桃花潭 查济</p>
<p>住宿 +溜达<br>时间来得及，就去查济。来不及就住桃花潭。</p>
<h2 id="第二天（4-5）_太平湖_和齐云山">第二天（4.5） 太平湖 和齐云山</h2><p>2.3 查济</p>
<p>2.4 太平湖</p>
<p>2.5 休宁县，吃饭 住宿</p>
<p>时间来得及，就去齐云山</p>
<h2 id="第三天（4-6）">第三天（4.6）</h2><p>齐云山-》 汤口</p>
<h2 id="第四天（4-7）">第四天（4.7）</h2>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[[我在做售前] 02. 第一章：售前的流程]]></title>
    <link href="haskio.github.io/2014/04/11/%E6%88%91%E5%9C%A8%E5%81%9A%E5%94%AE%E5%89%8D-02-%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E5%94%AE%E5%89%8D%E7%9A%84%E6%B5%81%E7%A8%8B/"/>
    <id>haskio.github.io/2014/04/11/我在做售前-02-第一章：售前的流程/</id>
    <published>2014-04-11T05:13:00.000Z</published>
    <updated>2015-05-24T02:37:19.672Z</updated>
    <content type="html"><![CDATA[<h2 id="先说大纲吧">先说大纲吧</h2><p>定义售前的流程，就是穿线，先看看一套下来都有那些事；布点，这些环节中那些是阶段点、里程碑；卡环节，在那些地方下功夫、那些地方可以一带而过，简称：穿线，布点，卡环节。</p>
<p>线的开头是从商机开始，一般的套路是这样：从客户那里得到需求，设计出一套解决方案（理念、功能），然后再呈现给客户，最后签单。</p>
<p>点就是初期交流阶段，需求分析阶段，方案设计阶段，客户答疑阶段，以及报价（或者投标）阶段，最后签合同。</p>
<p>卡环节就是在每个点进行验证或者成果，比如说文档输出，或者客户确认书等，作为进度控制和信息汇总。</p>
<p>暂借一张图：</p>
<p>￼<img src="http://ww1.sinaimg.cn/mw600/7c0f5763jw1efbp692x78j20go03zq35.jpg" alt="售前流程图"><br><a id="more"></a></p>
<h2 id="流程">流程</h2><p>下面开始说流程，简单的分成三个阶段：</p>
<p>初期：商机阶段</p>
<p>中期：交流阶段</p>
<p>后期：成单阶段</p>
<p>当然这是指的项目在签单之前的过程，并不是整个项目的阶段划分，请大家不要误解。下面就开始慢慢来说。</p>
<h3 id="1-项目初期-了解客户信息">1.项目初期-了解客户信息</h3><p>所有的起源，都是来源与一个商机。当然这个商机是要到销售那里，靠不靠谱看销售的。来源很多，比如关系、比如熟人也可能是网络营销、电话推广等。比如现在的b2c就是把所有的商品都排列好了，等客户上门。而电话销售就是主动打电话，都是一些寻找商机的情况。</p>
<p>当然对于有售前的企业来说，产品都不太适合电话推广（这里指的是一般情况），需要长期的沟通和交流，项目周期也比较长。很多的情况都是行业里的熟人和关系。</p>
<p>这就意味着，很多的商机是不靠谱的。你可以想想一下，某销售到某个地区的老客户新关系都拜访了一遍说我们是做某某产品的，有某某解决方案。突然有一天，这个客户打电话过去了，对你们的产品有兴趣，需要了解了解，这时候销售就高兴的屁颠屁颠带着售前去了。作为售前的你去了之后也一头雾水，讲完产品的ppt之后，客户点点头说好像不是这样，你更加一头雾水。</p>
<p>这样做当然不靠谱了，其实如果负责点销售应该先自己去看看，不过这时候客户会问一些产品或者方案相关的问题（未必多技术，最多是一些功能点），但是销售怕自己搞不定，就会拉上售前，导致两人一起晕。所以说销售要懂业务很重要，如果销售只是一个关系的系带，那么其实很多客户培养工作就会落到售前的身上。</p>
<p>因此对于售前人员来说，了解客户信息是很重要的。在销售看来（我说靠谱的销售），客户的决策链、项目运作方式以及金额是至关重要的，这些内容我们可以称之为商务信息，售前当然也要知道。但是除此之外的诉求，功能点、网络，以及客户的技术把关人和关心点等等也是很重要的内容，这些内容我们暂且称之为方案信息，意思就是做方案所需要的信息。</p>
<p>因此对售前来说，首先需要有一个能够了解客户大概状态的信息采集过程，商务信息由销售帮助填写。然后在商务信息的基础上，去补充方案信息。这样一方面来说，便于对项目信息的分工采集进行职责划分，另外一方面售前人员来说养成良好的记录习惯，毕竟好记性不如烂笔头，最后这也是一个很好的总结过程，有助对工作阶段的总结和整理。并且如果在项目中途换人，售前人员也可以根据对方的文档来了解项目概况。相当于说我们在售前阶段也进行了项目的配置管理。</p>
<p>综上所述，我认为售前人员在首次或者前期见客户时，需要形成一个项目信息调研表，包括客户信息、联系人、项目背景、项目情况、项目负责人以及项目需求等信息，并且与项目组成员进行共享，在之后的交流过程中不断的更新维护。</p>
<p>至于文档的共享，不用搞很复杂上来就用一些企业级的文档管理系统什么的，不好用不说，搞的大家怨声载道的就不好了。能实现效果即可，在之前的几个单位，我们都是用svn来进行文档分享，每个人建立自己的文件夹，只有自己可读写，其他人只有读权限。每个人的项目都放在自己的文件夹里。每天下班前commit一下即可，非常简单省事。</p>
<h3 id="中间插播的内容">中间插播的内容</h3><p>之前到这部分内容时，一直没有更新。自己也很郁闷。原因是因为加班到崩溃，崩溃到什么地步呢，不能思考，不能想东西，不想看书，也不想玩游戏、听音乐等等，于是无奈的我只能休假了，直到过年之后才好点。</p>
<p>在这里奉劝各位兄弟，公司是老板的，身体是自己的，老板要是都不着急的事，自己尽力做到最好就好了，即使拼了老命，也只是作了份工作而已，郁闷的还是自己。</p>
<p>其实售前这份工作还是很有前途的，可以持续的干些年头。只是随着时间的推进以及对工作年限的不断增加，对这个职位的看法和感悟也在慢慢的变化。</p>
<p>也许有时候真的是工作在改变我们，在经历过一个职位、一个行业的熏陶，每个人的思想、习惯都变的不在一样。而很多时候，除了第一个工作机会是你选的，之后的延续更多的是变动的在接受。</p>
<p>也可能是我们在完善工作，将一个一个成熟的不成熟的行业，慢慢的扩充、完善起来，形成一个行业、一个领域。并且积累其中的特殊文化、特别情怀。当然也可能越做越窄，慢慢的消亡。</p>
<p>总之好的情况是工作、行业和人在一起成长，不好的情况就是工作也没做好，自己也很郁闷。</p>
<h4 id="郁闷的来源分很多种，大概分为两类：">郁闷的来源分很多种，大概分为两类：</h4><p>有的来自公司内部，考核不好，公司战略不好，或者前后端配合不好，再或者公司资源不够、规章制度太死板等等。自己的思路不被公司认可，自己的能力不被认可。想做的事情做不了，给分配的事情不想做，等等。</p>
<p>有的来自公司外部，客户彪悍、不买账；合伙伙伴事多，天天大事小事没完没了；竞争对手把单子都快做成满天下了，自己公司的还蜗牛般没有动静，等等。</p>
<p>总之，郁闷的原因很多，但是郁闷的人却都是你，所以还得你自己来想办法，或搞定或规避，也或者你可以选择视而不见。</p>
<p>是啊，事多多事，碰那都是事，哪都不碰饿时事，有些事还真不是自己能够解决，比如公司战略，规章制度，产品方向也或者客户的决策评审。有些事则最好不好自己解决，比如上下环节中所协调的对方需要做的事情，你解决了反而不讨好，下次更累。</p>
<p>其实很多问题并不一定就有解决方案，更多的是我也不知道怎么办，但是我的做法就是先有话语权，等你把事情完成了，然后再提出建议。提建议时，最好是以解决方案的形式，提出比较完整的解决方案。</p>
<p>以上是插播。</p>
<h3 id="2、项目中期-交流期">2、项目中期-交流期</h3><p>不管是不是很靠谱的商机，除了那些实在是不对口的需求之外，在第一次交流过之后还会有几次甚至十几次的交流。</p>
<p>因为即使是不靠谱的那些，客户也需要一些陪衬，如果是投标的项目，还需要一些围标的。君不见各种招标文件里明确说明，如果来投标的公司不足n家（一般是3家，严格点的是5家）则本标作废，并且还会要求必须是本行业的有某些资质的公司才算数。</p>
<p>我之前就碰见过几次这样的事情，其中一次有客户打热点电话过来，要求了解我们的某个解决方案，结果我们俩人跑过去了，发现对方对某些细节很是门清。而实现的细节，跟我们的方案理念不相符，对方直接说，不要在意这些细节，也没有怎么了解我们的实现方式，最后就说给做个方案+demo吧，当时我的感觉就是他其实不关心我们是怎么做的、会做成什么样，而是告诉我们他其实就是需要一个能说得过去的文档即可。这个文档用来干什么的不言而喻。等后来我就直接跟销售说去探探他们的底，结果果然人家都找好合作伙伴了，因为要招标，所以拉上几家。估计当时行业里几家公司他都找过，总会能有几个捧哏的。想当初我刚开始做售前的是就跟着销售给别人做过分母。悲惨历史这里就不说了。</p>
<p>这个时期是比较重要的，一般来说客户的需求、诉求会在这个时候慢慢的显露出来，是售前人员了解的好时机。上一个环节，双方接触还太表面，了解的东西不会太多，即使是成型的需求最好也要再沉淀沉淀。下一个环节就要选型结束了，客户基本上思路和观念也基本形成（不是被某个厂家洗脑，就是客户自己琢磨明白了），再牛x的方案也不太好</p>
<p>翻盘。</p>
<p>另外一点，这个时候正是客户在吸收方案内容，并且形成自己观点的时候。因为并不是在项目的所有环节都存在内定的时候。</p>
<p>就如同我们设定了一个新的岗位，需要招聘一个人。首先的需求是纯粹的是需要一个有能力的人来负责一部分事情。但是什么样的人是真正的合适，要负责那些工作范围，这时候的需求其实是并不清晰的。就类似一个项目最开始相关的业务负责人是觉得这部分有问题，环节不完整或者是那样那样，在网上看过一些解决办法，觉得很合适，那样就开始了解。然后他开始挂一个职位描述和薪资，开始招人，先从众多的投简历的人中筛出来自己感觉靠谱的，然后再约过来交流。在交流的过程中，可能会发现对这个职位的定位是有问题的，或者是薪资有问题的，那么就不断调整对这个职位的职责，当然也或者将错就错的。在项目过程中呢，比如客户跟你描述他们如何如何困惑，如何如何想要解决问题，找了一大堆人来谈，最后你发现他们需要的是企业IM，而找的人都是做OA的。或者说预算50w，打算实现bi的功能等，那么就不要犹豫，赶紧告诉对方思路是错的。然后把你们方案的观念、思路告知对方，以形成统一的认知层。</p>
<p>当然了，这个认知层不是很容易建立的，首先你要先打消对方对你的抵触。因为你是在指出对方错误的人，一般来讲，有自知之明的人不多，而喜欢听别人说自己错误的人更不多，如何能让对方很不抵触的听你描述他的错误，就是交流能力面临的首要挑战。</p>
<p>一般来说你可以动之以情，晓之以理，可以先不谈对方的问题点，而是让对方看一下事实。也就是我们经常会干的：演示。</p>
<p>演示分为两种：一种是标准的产品演示，对一些大路货进行功能的讲解和展示，一般来说是用来扫盲用的。比如说BI，一听就是很高大尚，但是具体是做什么的，怎样的工作流程，很多人都没有见过。因此如果能够以实际系统来进行演示，可以帮助客户快速建立对BI的认知观，当然也会快速让他知道可能这东西不是他想要的。度要把握好。</p>
<h4 id="demo演示">demo演示</h4><p>另外一种是定制化demo的演示，就是在客户将所需要的功能点、流程等提出要求后，以此进行一些简单功能的开发和建模。并给客户进行演示。这种一般需要一段时间的开发或者建模的工作量，对于公司来说，就是人员的投入了（非业务人员的），为什么这块要单独说是人员投入呢。是因为负责demo开发或者建模的，一般是技术人员，平时是在进行开发或者研发工作的，调到项目中来其实是有时间损失的。而销售和售前本质的工作就是谈客户、进行方案交流，仅此在项目上的投入是可以不用单独强调的。当然最主要的问题是，调用这些人可能需要找研发经理协调人。不过对于一些轻量级的产品，可能售前人员可以自行进行demo的制作或者演示环境的个性化配置，那么处理起来会比较灵活。</p>
<p>这段时间是最长也是最幸苦的时候，各种方案的撰写、ppt的讲解、demo的演示等，都发生在这个阶段。因此也伴随着客户的挑刺、对你们的看法形成，以及对方案的接受情况等。广大售前们的所苦恼的客户不好沟通、对方案挑刺、以及如何写好ppt的问题都有可能发生，并且可能是反复发生的。我也希望你能够早日的度过这个阶段，走到成功的殿堂。</p>
<p>总之，客户的想法会在这个阶段被转化成思路，客户的需求会变成设计，客户的诉求会变成功能，大多数的事情都会尘埃落定，是成功还是失败，你早就可以知道。也会了解到竞争对手是在进行着怎么样的运作和努力。如果都要到了结束选型或者要开始招投标了，你还不知道竞争对手的情况，了解有几个竞争对手，那么可以很幸运的告诉你，你们公司被作为分母了。</p>
<h3 id="3、项目后期-_成单">3、项目后期- 成单</h3><p>在经过了艰苦漫长的交流期，客户终于接受了你们的解决方案，开始要谈如何购买的问题。当然这时候也会进行一些价格上的商议，只不过一般这是销售做的事情。有的时候也需要售前进行报价的编写，然后由销售进行增删改等。比如一些商务成本等之类，以及目标要做到的利润等都要加到报价里。如果不是招投标的，客户还会进行砍价，通常会有2-3轮，一轮是使用部分，一轮是财务部分。</p>
<p>更多的情况是需要走招标的流程，那么你最好把你们的报价藏的隐蔽一些，不要让经真对手拿到。因为价格都是评标中比较重要的评分标准，当标王一般是不会是中标着。如果你们在上一个环节中做的不是分母，那么应该怎么做价格，是很门清的。</p>
<p>而如果在这时候还处于一摸瞎的状况，才想要在客户那里发力，已经晚的太多太多了。不负责任的说，如果一个项目开始要招标了，那说明已经被确认的部分已经达到80%以上了。</p>
<p>当然，所谓成单的几率大小，并不是由售前说了算的，很多时候我们都是提参考意见。提完意见之后该干嘛还是要干嘛。因此比如我们在此讨论一下怎么做标书的事情。</p>
<p>如果是一个标准的或者说做的稍微规整点的招标书，会分为商务规范书和技术规范书。并且要求装订的格式、册别，以及应答的方式等内容。不过很多情况你可能会看到各种千奇百怪的招标书，不要惊讶，这是很正常的情况。你只要问明白如何如何做就可以，或者实在拿不准的拿起电话去问标书中留的负责人。一般的情况即使你是个什么都不懂的新人，2.3次投标工作下来也就熟悉了。</p>
<p>如果实在有什么经验要说的话，可以有以下几点：</p>
<p>1、 授权人，不管是授权给谁，还是法人自己撸袖子上，需要亲自到现场。</p>
<p>2、打印后的效果，一定要亲眼看看。如果是副本量的话，一般会选择到打印店打印。正所周知的打印驱动和字库的问题，可能某些字体会打印乱码，比如代码、或者架构部分（技术建议书中），也可能会发生某个区域没墨了，导致有几页页面空白。</p>
<p>3、出错，如果标书那里有出错了，时间来得及可以修正，如果来不及的话，也不会有多么大的影响，因为再大的影响，也没有不按时投递标书验证。即使有一些小错误，也不要慌张，如果感觉影响很大，可以发一下澄清，同样有效。</p>
<p>4、如果有讲标情况，不要求有多精彩、突出，中规中矩就好。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="先说大纲吧">先说大纲吧</h2><p>定义售前的流程，就是穿线，先看看一套下来都有那些事；布点，这些环节中那些是阶段点、里程碑；卡环节，在那些地方下功夫、那些地方可以一带而过，简称：穿线，布点，卡环节。</p>
<p>线的开头是从商机开始，一般的套路是这样：从客户那里得到需求，设计出一套解决方案（理念、功能），然后再呈现给客户，最后签单。</p>
<p>点就是初期交流阶段，需求分析阶段，方案设计阶段，客户答疑阶段，以及报价（或者投标）阶段，最后签合同。</p>
<p>卡环节就是在每个点进行验证或者成果，比如说文档输出，或者客户确认书等，作为进度控制和信息汇总。</p>
<p>暂借一张图：</p>
<p>￼<img src="http://ww1.sinaimg.cn/mw600/7c0f5763jw1efbp692x78j20go03zq35.jpg" alt="售前流程图"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[redmine的部署]]></title>
    <link href="haskio.github.io/2014/04/10/redmine%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
    <id>haskio.github.io/2014/04/10/redmine的部署/</id>
    <published>2014-04-09T16:27:00.000Z</published>
    <updated>2015-05-24T02:40:45.799Z</updated>
    <content type="html"><![CDATA[<p>1、部署</p>
<p>两种方案</p>
<p>一种自行搭建 nginx+ ror +mysql</p>
<p>一种一键安装bitnami  有win、linux mac等一键安装。 实现均是由apache+ror 的方式</p>
<p>建议，如果只是为了用redmine本身的功能，还是一键安装把，后面还需要搞很多东西，节省点精力</p>
<p>2、插件</p>
<pre><code><span class="number">1</span>、redmine_agile  敏捷的
www<span class="class">.redminecrm</span><span class="class">.com</span> 上下载
<span class="number">2</span>、projects_tree_view  项目的树状查看
官方wiki里找吧
<span class="number">3</span>、redmine_attach_screenshot  附件图片
注意有一个<span class="number">1.18</span> 还有一个<span class="number">1.0</span>.<span class="number">0</span>的，推荐用<span class="number">1.0</span>.<span class="number">0</span>的那个
`&lt;/pre&gt;
</code></pre><a id="more"></a>
<pre><code><span class="number">3</span>、主题

使用a1，redminecrm提供的

<span class="number">4</span>、升级

如果你是从低版本的redmine升级到高版本，比如说<span class="number">2.3</span> 到<span class="number">2.5</span>.需要进行数据库的升级，（注意，这时候先不要安装插件）

&lt;pre&gt;`$ cd apps/redmine/htdocs

$ bundle install <span class="comment">--without development test postgresql sqlite</span>

$ ruby bin/rake redmine:plugins RAILS_ENV=production
`&lt;/pre&gt;

然后插件部分：

After copying <span class="operator">the</span> plugin <span class="keyword">into</span> installdir/apps/redmine/htdocs/plugins.

&lt;pre&gt;`$ cd installdir
$ ./use_redmine
$ cd apps/redmine/htdocs
$ bundle install <span class="comment">--without development test postgresql sqlite --no-deployment</span>
$ bundle install <span class="comment">--without development test postgresql sqlite --deployment</span>
$ ruby bin/rake redmine:plugins RAILS_ENV=production
`&lt;/pre&gt;

详细，请查看  <span class="keyword">http</span>://wiki.bitnami.com/Applications/BitNami_Redmine_Stack<span class="comment">#How_to_upgrade_Redmine.3f</span>

<span class="number">5</span>、遇到的一些问题

安装插件，基本上不用说什么了，按照步骤来就可以了。

会有插件需要的gem版本跟工程的版本不一样，会有类似的问题：

Could <span class="operator">not</span> find mini_portile.0.5.1 <span class="operator">in</span> <span class="keyword">any</span> <span class="operator">of</span> <span class="operator">the</span> sources

解决的办法：

&lt;pre&gt;`bundle update
<span class="comment">#error so type command</span>
bundle install <span class="comment">--no-deployment</span>
</code></pre><p>当然，你需要先使用user_redmine,否则会提示你找不到bundle。</p>
<p>详细可以看这里 <a href="http://www.webhostbug.com/find-gem-version-sources/" target="_blank" rel="external">http://www.webhostbug.com/find-gem-version-sources/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>1、部署</p>
<p>两种方案</p>
<p>一种自行搭建 nginx+ ror +mysql</p>
<p>一种一键安装bitnami  有win、linux mac等一键安装。 实现均是由apache+ror 的方式</p>
<p>建议，如果只是为了用redmine本身的功能，还是一键安装把，后面还需要搞很多东西，节省点精力</p>
<p>2、插件</p>
<pre><code><span class="number">1</span>、redmine_agile  敏捷的
www<span class="class">.redminecrm</span><span class="class">.com</span> 上下载
<span class="number">2</span>、projects_tree_view  项目的树状查看
官方wiki里找吧
<span class="number">3</span>、redmine_attach_screenshot  附件图片
注意有一个<span class="number">1.18</span> 还有一个<span class="number">1.0</span>.<span class="number">0</span>的，推荐用<span class="number">1.0</span>.<span class="number">0</span>的那个
`&lt;/pre&gt;
</code></pre>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[tomcat的内存溢出问题解决办法收集]]></title>
    <link href="haskio.github.io/2014/03/14/tomcat%E7%9A%84%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95%E6%94%B6%E9%9B%86/"/>
    <id>haskio.github.io/2014/03/14/tomcat的内存溢出问题解决办法收集/</id>
    <published>2014-03-14T13:03:00.000Z</published>
    <updated>2015-05-24T02:40:34.294Z</updated>
    <content type="html"><![CDATA[<p>项目中，使用的是j2ee的框架，容器用的是tomcat 。虽然说机器很给力，都是4核、8核的cpu以及64g的内存，但是在运行过程中，总是产生这样那样的问题，研究了半天，归纳为几类，其中占比较多是tomcat的内存溢出问题，尤其我不是做java开发以及运维的，只能查询网上的资料。以下是收集的内容。</p>
<h2 id="讨论帖子1">讨论帖子1</h2><p><a href="http://www.iteye.com/topic/80620" target="_blank" rel="external">http://www.iteye.com/topic/80620</a></p>
<h3 id="解决方案">解决方案</h3><p>1/ 增加p区的大小</p>
<p>gc 启动参数里 增加-XX:MaxPermSize=256m</p>
<p>2/ 换jdk</p>
<p>Jrockit</p>
<p>3/<br><a id="more"></a><br>另外如果使用CMS（ConcMarkSweep GC）算法的话，开了-XX:+UseConcMarkSweepGC标志，默认情况下就是不会扫描permanent generation的，需要同时打开下面两个标志位才能让CMS GC扫描permanent generation。</p>
<p>-XX:+CMSPermGenSweepingEnabled</p>
<p>-XX:+CMSClassUnloadingEnabled</p>
<p>P.S. 只针对SUN的JVM有效。</p>
<p>4/</p>
<p>”可设置-XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled，使CMS收集持久代的类，而不是fullgc，netbeans5.5 performance文档的推荐。“</p>
<h2 id="讨论帖子2">讨论帖子2</h2><h3 id="java-lang-OutOfMemoryError:_Java_heap_space">java.lang.OutOfMemoryError: Java heap space</h3><p>Heap size 设置</p>
<p>修改TOMCAT_HOME/bin/catalina.sh</p>
<p>在“echo &quot;Using CATALINA_BASE:   $CATALINA_BASE&quot;”上面加入以下行：</p>
<p>JAVA_OPTS=&quot;-server -Xms800m -Xmx800m   -XX:MaxNewSize=256m&quot;</p>
<h2 id="讨论内容3">讨论内容3</h2><h3 id="java-lang-OutOfMemoryError:_PermGen_space及其解决方法">java.lang.OutOfMemoryError: PermGen space及其解决方法</h3><p><a href="http://www.wujianrong.com/archives/2006/12/javalangoutofmemoryerror_permg.html" target="_blank" rel="external">http://www.wujianrong.com/archives/2006/12/javalangoutofmemoryerror_permg.html</a></p>
<h2 id="gc回收机制">gc回收机制</h2><p><a href="http://blog.csdn.net/calvinxiu/article/details/1614473" target="_blank" rel="external">http://blog.csdn.net/calvinxiu/article/details/1614473</a></p>
<h2 id="jvm配置大全">jvm配置大全</h2><p><a href="http://ggmm.blog.sohu.com/117545379.html" target="_blank" rel="external">http://ggmm.blog.sohu.com/117545379.html</a></p>
<h2 id="Java中OutOfMemoryError与unable_to_create_new_native_thread(JVM创建大量线程)的关系">Java中OutOfMemoryError与unable to create new native thread(JVM创建大量线程)的关系</h2><p><a href="http://hi.baidu.com/hexiong/item/037488116cefd90a8ebde4b1" target="_blank" rel="external">http://hi.baidu.com/hexiong/item/037488116cefd90a8ebde4b1</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>项目中，使用的是j2ee的框架，容器用的是tomcat 。虽然说机器很给力，都是4核、8核的cpu以及64g的内存，但是在运行过程中，总是产生这样那样的问题，研究了半天，归纳为几类，其中占比较多是tomcat的内存溢出问题，尤其我不是做java开发以及运维的，只能查询网上的资料。以下是收集的内容。</p>
<h2 id="讨论帖子1">讨论帖子1</h2><p><a href="http://www.iteye.com/topic/80620">http://www.iteye.com/topic/80620</a></p>
<h3 id="解决方案">解决方案</h3><p>1/ 增加p区的大小</p>
<p>gc 启动参数里 增加-XX:MaxPermSize=256m</p>
<p>2/ 换jdk</p>
<p>Jrockit</p>
<p>3/<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[2014.3.5的购物单]]></title>
    <link href="haskio.github.io/2014/03/06/2014-3-5%E7%9A%84%E8%B4%AD%E7%89%A9%E5%8D%95/"/>
    <id>haskio.github.io/2014/03/06/2014-3-5的购物单/</id>
    <published>2014-03-05T16:19:41.000Z</published>
    <updated>2015-05-24T02:41:39.954Z</updated>
    <content type="html"><![CDATA[<p>最近的流水还是记录一下。<br>最近天干湿热，而且还一直在出差，实在没有去做身体调理的事情， 再加上最近的事物也比较的棘手，连睡眠都不好了。</p>
<p>于是这两三天来，整日一副蔫了吧唧的样子，实在是看着自己发愁。</p>
<p>又想了一下近日要买和想买的东西，算下来没个几千也下不来，看来还是要推后了，待到有钱时，再来就菊花。<br><a id="more"></a><br>因此就先记录一下吧，可能有些需求，过几天就不需要了或者忘记了也说不定。<br>1、眼镜，现在的这副经常有些小问题，而且是变色的，因为有些时候并不是带着很舒服。<br>2、键盘，家里的坏了，要搞一个做备用。想搞一个机械键盘<br>3、鼠标，出门在家，或者日常办公，没有一个好鼠标是不行的。可惜雷蛇的要放在家里用。唉，家里的鼠键一起坏，很是郁闷。 微软的蓝光，真的很不好用，dpi太低，在分辨率上用还可以。手感还一般，用着难受，结论就一个字：换。只是换那个还没有想好。<br>4、散热器，买了一个mac 的xx 散热器，还没有到货，先期待着。</p>
<p>暂时就这些把，真要梳理的时候，发现忘的很快。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近的流水还是记录一下。<br>最近天干湿热，而且还一直在出差，实在没有去做身体调理的事情， 再加上最近的事物也比较的棘手，连睡眠都不好了。</p>
<p>于是这两三天来，整日一副蔫了吧唧的样子，实在是看着自己发愁。</p>
<p>又想了一下近日要买和想买的东西，算下来没个几千也下不来，看来还是要推后了，待到有钱时，再来就菊花。<br>]]>
    
    </summary>
    
      <category term="流水" scheme="haskio.github.io/tags/%E6%B5%81%E6%B0%B4/"/>
    
      <category term="购物" scheme="haskio.github.io/tags/%E8%B4%AD%E7%89%A9/"/>
    
      <category term="记录" scheme="haskio.github.io/categories/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>